(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{282:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("p",[s._v("easysql是一个使用Scala3编写的sql构造器，主要特点有：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("1. 其充分利用了Scala3优秀的类型系统，可以在编译期解决掉大多数的错误sql；\n2. 得益于Scala3强大的表达能力，使用方式与原生sql非常相似，学习成本低；\n3. 可以使用Scala3本身的封装能力，动态构建上千行的复杂sql，而无需拼接字符串，也无需使用者学习sql语法树知识。\n")])])]),t("p",[s._v("虽然easysql是为了动态构建报表的复杂查询等场景而生的，但也可以当做orm类框架使用，比如执行查询，并把结果映射到对象（支持多表结果映射），或是使用case class直接生成insert、update等sql语句，避免编写样板代码，这些功能使用Scala3的内联函数和宏等功能，在编译期生成代码，并无运行期反射开销。")]),s._v(" "),t("p",[s._v("我们可以使用原生sql风格的api来构造一个查询模板：")]),s._v(" "),t("div",{staticClass:"language-scala extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" userName"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Option"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    from user\n    leftJoin post on user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("userId\n    orderBy user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("asc\n    limit "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" offset "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("where"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nonEmpty"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("库内置了一个sql的语法树，sql的任何部分都可以转化为对象或者方法调用，可以灵活地动态构造查询，这在某些应用（比如报表平台）中会非常有价值：")]),s._v(" "),t("div",{staticClass:"language-scala extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" newQuery "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" condition "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("where"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("orderBy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("asc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("leftJoin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("userId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("select"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("相比使用字符串等方式，不必费尽心思的处理字符串拼接，并且，调用各种子句的顺序可以不囿于sql语句的顺序，也可以在生成sql时处理成正确的情况。")]),s._v(" "),t("p",[s._v("并且，查询可以结构化创建，比如下面的嵌套子查询：")]),s._v(" "),t("div",{staticClass:"language-scala extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" q1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" as "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from user as "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"q1"')]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" q2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from q1 as "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"q2"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" q3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from q2 as "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"q3"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" q4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id as "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from q3 as "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"q4"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" q5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("q4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from q4\n")])])]),t("p",[s._v("我们可以分步构建复杂查询，而无需像原生sql那样嵌套，在最终使用时，也能正确生成查询。")]),s._v(" "),t("p",[s._v("而且easysql提供的api是类型安全的，比如下面的错误查询，会得到"),t("strong",[s._v("编译错误")]),s._v("，而不是运行期异常：")]),s._v(" "),t("div",{staticClass:"language-scala extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from user\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" s2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from user\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" u "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1 union s2\n")])])]),t("p",[s._v("easysql还提供除此之外的更多编译期正确性检查，帮助用户构建安全的查询。")]),s._v(" "),t("p",[s._v("不过，easysql并不是时时刻刻都能判定错误查询并返回编译错误，这并非是Scala3的类型系统不支持，而是与动态构建查询的易用性进行权衡之后的结果，某些编译期校验会让动态查询构建变得十分复杂（比如group by字段非主键的情况下，查询列表中出现了别的字段）。")]),s._v(" "),t("p",[s._v("easysql在易用性与安全性之间有比较好的平衡，比起毫无编译期保障的sql字符串来说，更具安全性，并且还能得到IDE的提示。")]),s._v(" "),t("p",[s._v("支持MySQL、PostgreSQL、Oracle、SQLserver、DB2、SQLite等数据库的方言生成。同一个查询对象，可以方便地生成不同数据库的方言：")]),s._v(" "),t("div",{staticClass:"language-scala extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" select "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from user limit "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" offset "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sql1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MYSQL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sql2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PGSQL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" \n")])])]),t("p",[t("strong",[s._v("其中PostgreSQL和MySQL方言是第一优先级支持，dsl设计以PostgreSQL语法为蓝本。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);