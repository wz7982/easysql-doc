(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{283:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jpa风格查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jpa风格查询"}},[t._v("#")]),t._v(" JPA风格查询")]),t._v(" "),e("p",[e("strong",[t._v("此部分为实验性功能")])]),t._v(" "),e("p",[t._v("现代软件应用里，查询都倾向于简单化，可以获得更好的性能和并发能力。Java提出了JPA标准，在简单的查询里，我们可以通过方法名来自动创建查询，避免样板代码。easysql也支持类似JPA风格的查询构造方法：")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" query "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jpa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_by_id_and_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("我们可以使用"),e("code",[t._v("jpa")]),t._v("方法传入一个表结构对象，并调用一个动态的方法名，关键字之间使用下划线隔开。")]),t._v(" "),e("p",[t._v("可以看到，与Spring Data JPA等JPA实现不同的是，我们无需为查询创建创建一个Repository接口，并在里面创建方法名，而是直接动态调用即可。")]),t._v(" "),e("p",[t._v("得益于Scala3的类型系统和编译期元编程能力，easysql可以从方法名中自动推断出参数的类型，达到类型安全，比如上面的调用如果改为：")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" query "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jpa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_by_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("就会产生编译错误。")]),t._v(" "),e("p",[t._v("由于推断出的参数是元组类型，因此单个参数的情况下，我们需要传入一个一元组，这样不太方便，我们可以"),e("code",[t._v("import easysql.dsl.JPA.given")]),t._v("来简化调用：")]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入前")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" q1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jpa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_by_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" EmptyTuple"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入后")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("easysql"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dsl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("JPA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("given")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" q2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jpa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_by_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("以下是关键字列表、对应的sql运算符以及推断出来的参数类型（使用"),e("code",[t._v("col")]),t._v("指代实际的字段名，参数类型会依次拼接，最终生成一个元组类型）：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("关键字")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("参数类型")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("find_by")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}}),t._v(" "),e("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("and")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("and")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("or")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("or")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("=")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col.type")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_gt")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v(">")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col.type")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_ge")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v(">=")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col.type")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_lt")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("<")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col.type")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_le")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("<=")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col.type")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_not")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("<>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col.type")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_in")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("in")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("List[col.type]")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_notIn")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("not in")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("List[col.type]")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_like")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("like '%xxx%'")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("String")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_notLike")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("not like '%xxx%'")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("String")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_startingWith")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("like 'xxx%'")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("String")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_endingWith")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("like '%xxx'")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("String")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_between")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("between")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(col.type, col.type)")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("col_notBetween")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("not between")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("(col.type, col.type)")])])])])]),t._v(" "),e("blockquote",[e("p",[t._v("暂不支持实体类中的自定义类型字段。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);